security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Parents:
            algorithm: auto

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        users:
            entity:
                class: 'App\Entity\Parents'
                property: 'email'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            #form_login:
             #   login_path: login
              #  check_path: login
               # csrf_token_generator: security.csrf.token_manager
                #default_target_path: /login
                #always_use_default_target_path: true
            logout:
                path: app_logout
                target: /
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            #remember_me:
             #   secret:   '%kernel.secret%'
              #  lifetime: 604800 # 1 week in seconds
               # path:     /
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         - { path: '^/admin', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }
         #- { path: ^/profile, roles: ROLE_USER }

